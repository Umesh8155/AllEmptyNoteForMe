//DatePicker to hide day or month or year
public void alertDatePicker() {

        LayoutInflater inflater = (LayoutInflater) getActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View view = inflater.inflate(R.layout.datepiker, null, false);


        final DatePicker simpleDatePicker = (DatePicker) view.findViewById(R.id.simpleDatePicker); // initiate a date picker
        simpleDatePicker.setBackgroundColor(Color.WHITE);
        simpleDatePicker.setMaxDate(System.currentTimeMillis());

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP){
            int daySpinnerId = Resources.getSystem().getIdentifier("day", "id", "android");
            if (daySpinnerId != 0)
            {
                View daySpinner = simpleDatePicker.findViewById(daySpinnerId);
                if (daySpinner != null)
                {
                    daySpinner.setVisibility(View.GONE);
                }
            }

            int monthSpinnerId = Resources.getSystem().getIdentifier("month", "id", "android");
            if (monthSpinnerId != 0)
            {
                View monthSpinner = simpleDatePicker.findViewById(monthSpinnerId);
                if (monthSpinner != null)
                {
                    monthSpinner.setVisibility(View.VISIBLE);
                }
            }

            int yearSpinnerId = Resources.getSystem().getIdentifier("year", "id", "android");
            if (yearSpinnerId != 0)
            {
                View yearSpinner = simpleDatePicker.findViewById(yearSpinnerId);
                if (yearSpinner != null)
                {
                    yearSpinner.setVisibility(View.VISIBLE);
                }
            }
        } else { //Older SDK versions
            Field f[] = simpleDatePicker.getClass().getDeclaredFields();
            for (Field field : f)
            {
                if(field.getName().equals("mDayPicker") || field.getName().equals("mDaySpinner"))
                {
                    field.setAccessible(true);
                    Object dayPicker = null;
                    try {
                        dayPicker = field.get(simpleDatePicker);
                    } catch (IllegalAccessException e) {
                        e.printStackTrace();
                    }
                    ((View) dayPicker).setVisibility(View.GONE);
                }

                if(field.getName().equals("mMonthPicker") || field.getName().equals("mMonthSpinner"))
                {
                    field.setAccessible(true);
                    Object monthPicker = null;
                    try {
                        monthPicker = field.get(simpleDatePicker);
                    } catch (IllegalAccessException e) {
                        e.printStackTrace();
                    }
                    ((View) monthPicker).setVisibility(View.VISIBLE);
                }

                if(field.getName().equals("mYearPicker") || field.getName().equals("mYearSpinner"))
                {
                    field.setAccessible(true);
                    Object yearPicker = null;
                    try {
                        yearPicker = field.get(simpleDatePicker);
                    } catch (IllegalAccessException e) {
                        e.printStackTrace();
                    }
                    ((View) yearPicker).setVisibility(View.VISIBLE);
                }
            }
        }


        if (birthdayDate.equals("")) {

        } else {
            String[] separated = birthdayDate.split("/");
            String Month = separated[0].trim();
            String Day = separated[1].trim();
            String yaer = separated[2].trim();

            int d = Integer.parseInt(Day);
            int m = Integer.parseInt(Month);
            int y = Integer.parseInt(yaer);

            Log.e("Mo", "" + Month);
            Log.e("Day", "" + Day);
            Log.e("yaer", "" + yaer);

            simpleDatePicker.init(y, m, d, null);
        }

        new AlertDialog.Builder(getActivity()).setView(view)
                .setTitle("Set Date")
                .setPositiveButton("SET", new DialogInterface.OnClickListener() {
                    @TargetApi(11)
                    public void onClick(DialogInterface dialog, int id) {

                        String day,month,year;

                        day = "" + simpleDatePicker.getDayOfMonth();
                        month = "" + (simpleDatePicker.getMonth() + 1);
                        year = "" + simpleDatePicker.getYear();
                        if (day.length() < 2) {
                            day = "0" + day;
                        }
                        if (month.length() < 2) {
                            month = "0" + month;
                        }

                        String formatedDate = "" +  day.trim() + "/" + month.trim() + "/" + year.trim();

                        tv_select_birthday_date.setText("" + formatedDate);
                        AgeCount(formatedDate);
                        SetUpcomingBirthday(formatedDate);
                        calculateNextBirthday(formatedDate);

                        dialog.cancel();

                    }

                }).show();


    }